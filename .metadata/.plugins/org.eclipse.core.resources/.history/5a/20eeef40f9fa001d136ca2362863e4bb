/*
 * Main.java                      				                     25 mai 2023
 * IUT de Rodez, pas de copyright ni de "copyleft"
 */
package application;
	
import java.io.IOException;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.stage.Stage;
import javafx.scene.Parent;
import javafx.scene.Scene;


/**
 * Classe principale de l'application permettant d'afficher des fenêtres au contenu
 * différent (ce sont les vues qui changent)
 * 
 * @author Tom Douaud
 * @author Loïc Faugières
 * @author Simon Guiraud
 */
public class Othello extends Application {
	
	 /** Scène principale de l'application, celle qui contient les 2 boutons */
	 private static Scene scenePrincipale;
	 /** Scène permettant de gérer l'addition */
	 private static Scene sceneAddition;
	 /** Scène permettant de gérer la soustraction */
	 private static Scene sceneSoustraction;
	 /** Fenêtre principale de l'application
	 * La scène qui lui est associée sera modifiée en fonction
	 * des clics de l'utilisateur
	 */
	 private static Stage fenetrePrincipale;
	 /**
	 * Permet de modifier la scène de la fenêtre principale
	 * pour qu'elle devienne celle de l'addition
	 */
	 public static void activerAddition() {
	 fenetrePrincipale.setScene(sceneAddition);
	 }
	 /**
	 * Permet de modifier la scène de la fenêtre principale
	 * pour qu'elle devienne celle de la soustraction
	 */
	 public static void activerSoustraction() {
	 fenetrePrincipale.setScene(sceneSoustraction);
	 }
	 /**
	 * Permet de modifier la scène de la fenêtre principale
	 * pour qu'elle devienne la scène principale, celle qui
	 * affiche les 2 boutons addition et soustraction
	 */
	 public static void activerPrincipale() {
	 fenetrePrincipale.setScene(scenePrincipale);
	 }
	 @Override
	 public void start(Stage primaryStage) {
	 try {
	 /*
	 * chargement de la vue de la scène principale dans le conteneur
	 * de type Parent
	 */
	 FXMLLoader chargeurFXML = new FXMLLoader();
	 chargeurFXML.setLocation(getClass().getResource("VueFenetrePrincipale.fxml"));
	 Parent conteneur = chargeurFXML.load();

	 /*
	 * Création de la scène principale
	 */
	 scenePrincipale = new Scene(conteneur, 500, 300);
	 /*
	 * Chargement de la vue de l'addition et
	 * création de la scène associée à cette vue
	 */
	 FXMLLoader chargeurFXMLAddition = new FXMLLoader();
	 chargeurFXMLAddition.setLocation(getClass().getResource("VueAddition.fxml"));
	 conteneur = chargeurFXMLAddition.load();
	 sceneAddition = new Scene(conteneur, 500, 300);
	 /*
	 * Chargement de la vue de la soustraction et
	 * création de la scène associée à cette vue
	 */
	 FXMLLoader chargeurFXMLSoustraction = new FXMLLoader();
	 chargeurFXMLSoustraction.setLocation(getClass().getResource("VueSoustraction.fxml"));
	 conteneur = chargeurFXMLSoustraction.load();
	 sceneSoustraction = new Scene(conteneur, 500, 300);
	 // on définit le titre, la hauteur et la largeur de la fenêtre principale
	 primaryStage.setTitle("Application avec plusieurs fenêtres");
	 primaryStage.setHeight(300);
	 primaryStage.setWidth(500);

	 /*
	 * on associe la scène principale à la fenêtre principale
	 * Cette dernière est stockée en tant qu'attribut afin d'être accessible
	 * dans les méthodes activer... Celles qui permettent de rendre active
	 * l'une des 3 scènes
	 */
	 primaryStage.setScene(scenePrincipale);
	 fenetrePrincipale = primaryStage;
	 primaryStage.show();

	 } catch (IOException e) {

	 // TODO Auto-generated catch block
	 e.printStackTrace();
	 }
	 }

	 /**
	 * Programme principal
	 * @param args non utilisé
	 */
	 public static void main(String[] args) {
	 launch(args);
	 }
}